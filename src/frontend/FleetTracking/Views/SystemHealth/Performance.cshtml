@model FleetTracking.Models.PerformanceMetrics

@{
    ViewData["Title"] = "Performance Metrics";
}

<div class="container-fluid">
    <h1 class="mt-2 mb-4">
        <i class="fas fa-tachometer-alt me-2"></i> Performance Metrics
    </h1>
    
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="m-0"><i class="fas fa-stopwatch me-2"></i> API Response Time</h5>
                </div>
                <div class="card-body text-center">
                    <div class="display-4 mb-2">@Model.AvgApiResponseTimeMs ms</div>
                    <p class="text-muted">Average API Response Time</p>
                    
                    <div class="d-flex justify-content-between mt-4">
                        <div>
                            <h6>Slowest:</h6>
                            <div class="fw-bold text-danger">185 ms</div>
                        </div>
                        <div>
                            <h6>Average:</h6>
                            <div class="fw-bold">@Model.AvgApiResponseTimeMs ms</div>
                        </div>
                        <div>
                            <h6>Fastest:</h6>
                            <div class="fw-bold text-success">32 ms</div>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <span class="@(Model.AvgApiResponseTimeMs < 100 ? "text-success" : "text-warning")">
                        <i class="@(Model.AvgApiResponseTimeMs < 100 ? "fas fa-arrow-down" : "fas fa-arrow-up")"></i>
                        @(Model.AvgApiResponseTimeMs < 100 ? "5% improved" : "8% degraded") from last week
                    </span>
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="m-0"><i class="fas fa-users me-2"></i> Active Sessions</h5>
                </div>
                <div class="card-body text-center">
                    <div class="display-4 mb-2">@Model.ActiveUserSessions</div>
                    <p class="text-muted">Current Active User Sessions</p>
                    
                    <div class="progress mt-4" style="height: 25px;">
                        <div class="progress-bar bg-info" 
                             role="progressbar" 
                             style="width: @(Model.ActiveUserSessions * 100 / 200)%;" 
                             aria-valuenow="@Model.ActiveUserSessions" 
                             aria-valuemin="0" 
                             aria-valuemax="200">
                            @Model.ActiveUserSessions / 200
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <span class="text-info">
                        <i class="fas fa-info-circle"></i>
                        Peak today: 85 users
                    </span>
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="m-0"><i class="fas fa-bolt me-2"></i> Request Volume</h5>
                </div>
                <div class="card-body text-center">
                    <div class="display-4 mb-2">6,247</div>
                    <p class="text-muted">Requests in the Last Hour</p>
                    
                    <div class="d-flex justify-content-between mt-4">
                        <div>
                            <h6>Successful:</h6>
                            <div class="fw-bold text-success">6,183</div>
                        </div>
                        <div>
                            <h6>Errors:</h6>
                            <div class="fw-bold text-danger">64</div>
                        </div>
                        <div>
                            <h6>Error Rate:</h6>
                            <div class="fw-bold">1.02%</div>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <span class="text-success">
                        <i class="fas fa-check-circle"></i>
                        98.98% uptime today
                    </span>
                </div>
            </div>
        </div>
    </div>
    
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="m-0"><i class="fas fa-chart-line me-2"></i> Performance Trends</h5>
                        <div class="btn-group">
                            <button type="button" class="btn btn-light btn-sm time-range" data-range="hour">Hour</button>
                            <button type="button" class="btn btn-light btn-sm time-range active" data-range="day">Day</button>
                            <button type="button" class="btn btn-light btn-sm time-range" data-range="week">Week</button>
                            <button type="button" class="btn btn-light btn-sm time-range" data-range="month">Month</button>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="mb-4">
                        <ul class="nav nav-tabs" id="performanceTabs" role="tablist">
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active" id="response-time-tab" data-bs-toggle="tab" data-bs-target="#response-time" 
                                        type="button" role="tab" aria-controls="response-time" aria-selected="true">
                                    Response Time
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="request-volume-tab" data-bs-toggle="tab" data-bs-target="#request-volume" 
                                        type="button" role="tab" aria-controls="request-volume" aria-selected="false">
                                    Request Volume
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="memory-usage-tab" data-bs-toggle="tab" data-bs-target="#memory-usage" 
                                        type="button" role="tab" aria-controls="memory-usage" aria-selected="false">
                                    Memory Usage
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="cpu-usage-tab" data-bs-toggle="tab" data-bs-target="#cpu-usage" 
                                        type="button" role="tab" aria-controls="cpu-usage" aria-selected="false">
                                    CPU Usage
                                </button>
                            </li>
                        </ul>
                        
                        <div class="tab-content mt-3" id="performanceTabsContent">
                            <div class="tab-pane fade show active" id="response-time" role="tabpanel" aria-labelledby="response-time-tab">
                                <canvas id="responseTimeChart" height="300"></canvas>
                            </div>
                            <div class="tab-pane fade" id="request-volume" role="tabpanel" aria-labelledby="request-volume-tab">
                                <canvas id="requestVolumeChart" height="300"></canvas>
                            </div>
                            <div class="tab-pane fade" id="memory-usage" role="tabpanel" aria-labelledby="memory-usage-tab">
                                <canvas id="memoryUsageChart" height="300"></canvas>
                            </div>
                            <div class="tab-pane fade" id="cpu-usage" role="tabpanel" aria-labelledby="cpu-usage-tab">
                                <canvas id="cpuUsageChart" height="300"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="m-0"><i class="fas fa-code me-2"></i> API Endpoint Performance</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="endpointPerformanceTable" class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>Endpoint</th>
                                    <th>Avg. Response</th>
                                    <th>Requests</th>
                                    <th>Error Rate</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>/api/vehicles</td>
                                    <td>45 ms</td>
                                    <td>1,245</td>
                                    <td>0.2%</td>
                                    <td><span class="badge bg-success">Healthy</span></td>
                                </tr>
                                <tr>
                                    <td>/api/drivers</td>
                                    <td>62 ms</td>
                                    <td>982</td>
                                    <td>0.4%</td>
                                    <td><span class="badge bg-success">Healthy</span></td>
                                </tr>
                                <tr>
                                    <td>/api/trips</td>
                                    <td>128 ms</td>
                                    <td>524</td>
                                    <td>1.1%</td>
                                    <td><span class="badge bg-warning">Degraded</span></td>
                                </tr>
                                <tr>
                                    <td>/api/maintenance</td>
                                    <td>95 ms</td>
                                    <td>315</td>
                                    <td>0.6%</td>
                                    <td><span class="badge bg-success">Healthy</span></td>
                                </tr>
                                <tr>
                                    <td>/api/analytics</td>
                                    <td>185 ms</td>
                                    <td>187</td>
                                    <td>2.1%</td>
                                    <td><span class="badge bg-warning">Degraded</span></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="card-footer">
                    <button id="checkEndpoints" class="btn btn-primary btn-sm">
                        <i class="fas fa-sync-alt"></i> Check Endpoints
                    </button>
                </div>
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="m-0"><i class="fas fa-database me-2"></i> Database Performance</h5>
                </div>
                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <h6>Query Execution Time</h6>
                            <div class="display-6">78 ms</div>
                            <small class="text-muted">Average query time</small>
                        </div>
                        <div class="col-md-6">
                            <h6>Active Connections</h6>
                            <div class="display-6">12</div>
                            <small class="text-muted">Current connections</small>
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-12">
                            <h6>Slowest Queries</h6>
                            <div class="table-responsive">
                                <table class="table table-sm">
                                    <thead>
                                        <tr>
                                            <th>Query Type</th>
                                            <th>Table</th>
                                            <th>Avg. Time</th>
                                            <th>Count</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>SELECT</td>
                                            <td>Trips</td>
                                            <td>156 ms</td>
                                            <td>245</td>
                                        </tr>
                                        <tr>
                                            <td>JOIN</td>
                                            <td>Vehicles/Maintenance</td>
                                            <td>135 ms</td>
                                            <td>89</td>
                                        </tr>
                                        <tr>
                                            <td>SELECT</td>
                                            <td>Analytics</td>
                                            <td>125 ms</td>
                                            <td>112</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-12">
                            <h6>Query Distribution</h6>
                            <canvas id="queryDistributionChart" height="150"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function() {
            // Initialize DataTable
            $('#endpointPerformanceTable').DataTable({
                responsive: true,
                order: [[1, 'desc']], // Sort by response time
                paging: false,
                searching: false,
                info: false
            });
            
            // Time range buttons
            $('.time-range').click(function() {
                $('.time-range').removeClass('active');
                $(this).addClass('active');
                
                const range = $(this).data('range');
                updateCharts(range);
            });
            
            // Initialize charts
            createResponseTimeChart('day');
            createRequestVolumeChart('day');
            createMemoryUsageChart('day');
            createCpuUsageChart('day');
            createQueryDistributionChart();
            
            // Check endpoints button
            $('#checkEndpoints').click(function() {
                $(this).html('<i class="fas fa-spinner fa-spin"></i> Checking...');
                
                // Simulate API call
                setTimeout(function() {
                    $('#checkEndpoints').html('<i class="fas fa-sync-alt"></i> Check Endpoints');
                    
                    // Show success message
                    if (typeof toastr !== 'undefined') {
                        toastr.success('Endpoint health check completed successfully.');
                    } else {
                        alert('Endpoint health check completed successfully.');
                    }
                }, 2000);
            });
            
            // Update all charts based on selected time range
            function updateCharts(range) {
                createResponseTimeChart(range);
                createRequestVolumeChart(range);
                createMemoryUsageChart(range);
                createCpuUsageChart(range);
            }
            
            // Create response time chart
            function createResponseTimeChart(range) {
                const canvas = document.getElementById('responseTimeChart');
                if (!canvas) return;
                
                // Clear existing chart if any
                if (window.responseTimeChart) {
                    window.responseTimeChart.destroy();
                }
                
                const { labels, data } = generateChartData(range, 30, 200);
                
                window.responseTimeChart = new Chart(canvas, {
                    type: 'line',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Response Time (ms)',
                            data: data,
                            borderColor: 'rgba(75, 192, 192, 1)',
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            tension: 0.4,
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'Response Time (ms)'
                                }
                            },
                            x: {
                                title: {
                                    display: true,
                                    text: `Time (Last ${getTimeRangeText(range)})`
                                }
                            }
                        },
                        plugins: {
                            title: {
                                display: true,
                                text: `API Response Time - Last ${getTimeRangeText(range)}`
                            }
                        }
                    }
                });
            }
            
            // Create request volume chart
            function createRequestVolumeChart(range) {
                const canvas = document.getElementById('requestVolumeChart');
                if (!canvas) return;
                
                // Clear existing chart if any
                if (window.requestVolumeChart) {
                    window.requestVolumeChart.destroy();
                }
                
                const { labels, data } = generateChartData(range, 100, 500);
                
                window.requestVolumeChart = new Chart(canvas, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Number of Requests',
                            data: data,
                            backgroundColor: 'rgba(54, 162, 235, 0.7)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'Number of Requests'
                                }
                            },
                            x: {
                                title: {
                                    display: true,
                                    text: `Time (Last ${getTimeRangeText(range)})`
                                }
                            }
                        },
                        plugins: {
                            title: {
                                display: true,
                                text: `Request Volume - Last ${getTimeRangeText(range)}`
                            }
                        }
                    }
                });
            }
            
            // Create memory usage chart
            function createMemoryUsageChart(range) {
                const canvas = document.getElementById('memoryUsageChart');
                if (!canvas) return;
                
                // Clear existing chart if any
                if (window.memoryUsageChart) {
                    window.memoryUsageChart.destroy();
                }
                
                const { labels, data } = generateChartData(range, 40, 80);
                
                window.memoryUsageChart = new Chart(canvas, {
                    type: 'line',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Memory Usage (%)',
                            data: data,
                            borderColor: 'rgba(255, 159, 64, 1)',
                            backgroundColor: 'rgba(255, 159, 64, 0.2)',
                            tension: 0.4,
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                suggestedMax: 100,
                                title: {
                                    display: true,
                                    text: 'Memory Usage (%)'
                                }
                            },
                            x: {
                                title: {
                                    display: true,
                                    text: `Time (Last ${getTimeRangeText(range)})`
                                }
                            }
                        },
                        plugins: {
                            title: {
                                display: true,
                                text: `Memory Usage - Last ${getTimeRangeText(range)}`
                            }
                        }
                    }
                });
            }
            
            // Create CPU usage chart
            function createCpuUsageChart(range) {
                const canvas = document.getElementById('cpuUsageChart');
                if (!canvas) return;
                
                // Clear existing chart if any
                if (window.cpuUsageChart) {
                    window.cpuUsageChart.destroy();
                }
                
                const { labels, data } = generateChartData(range, 20, 70);
                
                window.cpuUsageChart = new Chart(canvas, {
                    type: 'line',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'CPU Usage (%)',
                            data: data,
                            borderColor: 'rgba(255, 99, 132, 1)',
                            backgroundColor: 'rgba(255, 99, 132, 0.2)',
                            tension: 0.4,
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                suggestedMax: 100,
                                title: {
                                    display: true,
                                    text: 'CPU Usage (%)'
                                }
                            },
                            x: {
                                title: {
                                    display: true,
                                    text: `Time (Last ${getTimeRangeText(range)})`
                                }
                            }
                        },
                        plugins: {
                            title: {
                                display: true,
                                text: `CPU Usage - Last ${getTimeRangeText(range)}`
                            }
                        }
                    }
                });
            }
            
            // Create query distribution chart
            function createQueryDistributionChart() {
                const canvas = document.getElementById('queryDistributionChart');
                if (!canvas) return;
                
                new Chart(canvas, {
                    type: 'doughnut',
                    data: {
                        labels: ['SELECT', 'INSERT', 'UPDATE', 'DELETE', 'JOIN'],
                        datasets: [{
                            data: [65, 12, 18, 5, 10],
                            backgroundColor: [
                                'rgba(75, 192, 192, 0.7)',
                                'rgba(54, 162, 235, 0.7)',
                                'rgba(255, 206, 86, 0.7)',
                                'rgba(255, 99, 132, 0.7)',
                                'rgba(153, 102, 255, 0.7)'
                            ],
                            borderColor: [
                                'rgba(75, 192, 192, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(255, 99, 132, 1)',
                                'rgba(153, 102, 255, 1)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'right'
                            }
                        }
                    }
                });
            }
            
            // Generate random data for charts
            function generateChartData(range, min, max) {
                const labels = [];
                const data = [];
                let count;
                
                switch (range) {
                    case 'hour':
                        count = 60;
                        for (let i = 0; i < count; i++) {
                            labels.push(`${59-i}m ago`);
                        }
                        break;
                    case 'day':
                        count = 24;
                        for (let i = 0; i < count; i++) {
                            labels.push(`${23-i}h ago`);
                        }
                        break;
                    case 'week':
                        count = 7;
                        for (let i = count - 1; i >= 0; i--) {
                            const d = new Date();
                            d.setDate(d.getDate() - i);
                            labels.push(d.toLocaleDateString('en-US', { weekday: 'short' }));
                        }
                        break;
                    case 'month':
                        count = 30;
                        for (let i = count - 1; i >= 0; i--) {
                            const d = new Date();
                            d.setDate(d.getDate() - i);
                            labels.push(d.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }));
                        }
                        break;
                }
                
                for (let i = 0; i < count; i++) {
                    data.push(Math.floor(Math.random() * (max - min + 1)) + min);
                }
                
                return { labels, data };
            }
            
            // Get text label for time range
            function getTimeRangeText(range) {
                switch (range) {
                    case 'hour':
                        return 'Hour';
                    case 'day':
                        return '24 Hours';
                    case 'week':
                        return 'Week';
                    case 'month':
                        return '30 Days';
                    default:
                        return '24 Hours';
                }
            }
        });
    </script>
} 