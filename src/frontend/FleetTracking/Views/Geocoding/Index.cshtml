@{
    ViewData["Title"] = "Geocoding";
}

<div class="container-fluid px-4 py-4">
    <div class="row mb-4">
        <div class="col-md-6">
            <h1 class="display-6 mb-0">Geocoding</h1>
            <p class="text-muted">Search addresses and convert between coordinates and addresses</p>
        </div>
        <div class="col-md-6 text-end">
            <a asp-action="Batch" class="btn btn-outline-primary me-2">
                <i class="bi bi-list-check"></i> Batch Geocoding
            </a>
            <a asp-action="SavedLocations" class="btn btn-outline-primary me-2">
                <i class="bi bi-bookmark-star"></i> Saved Locations
            </a>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="card mb-4 shadow-sm">
                <div class="card-header bg-white py-3">
                    <h5 class="mb-0">Forward Geocoding</h5>
                    <p class="text-muted mb-0 small">Convert addresses to coordinates</p>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="forwardAddress" class="form-label">Address</label>
                        <div class="input-group">
                            <input type="text" class="form-control" id="forwardAddress" placeholder="Enter address to geocode...">
                            <button class="btn btn-primary" type="button" id="forwardGeocodingBtn">
                                <i class="bi bi-search"></i> Search
                            </button>
                        </div>
                        <div class="form-text">Enter a full or partial address to find its coordinates</div>
                    </div>
                    <div id="forwardResults" class="d-none">
                        <hr>
                        <h6>Results</h6>
                        <div class="table-responsive">
                            <table class="table table-sm table-hover">
                                <thead>
                                    <tr>
                                        <th>Address</th>
                                        <th>Coordinates</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="forwardResultsBody">
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div id="forwardLoading" class="text-center py-3 d-none">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p class="mt-2">Geocoding address...</p>
                    </div>
                    <div id="forwardError" class="alert alert-danger d-none">
                        <i class="bi bi-exclamation-triangle-fill"></i> Error performing geocoding
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card mb-4 shadow-sm">
                <div class="card-header bg-white py-3">
                    <h5 class="mb-0">Reverse Geocoding</h5>
                    <p class="text-muted mb-0 small">Convert coordinates to addresses</p>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="reverseLatitude" class="form-label">Coordinates</label>
                        <div class="input-group mb-2">
                            <span class="input-group-text">Lat</span>
                            <input type="text" class="form-control" id="reverseLatitude" placeholder="Latitude (e.g. 34.0522)">
                            <span class="input-group-text">Lng</span>
                            <input type="text" class="form-control" id="reverseLongitude" placeholder="Longitude (e.g. -118.2437)">
                        </div>
                        <div class="d-grid">
                            <button class="btn btn-primary" type="button" id="reverseGeocodingBtn">
                                <i class="bi bi-geo-alt"></i> Find Address
                            </button>
                        </div>
                    </div>
                    <div id="reverseResults" class="d-none">
                        <hr>
                        <h6>Results</h6>
                        <div class="table-responsive">
                            <table class="table table-sm table-hover">
                                <thead>
                                    <tr>
                                        <th>Address</th>
                                        <th>Type</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="reverseResultsBody">
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div id="reverseLoading" class="text-center py-3 d-none">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p class="mt-2">Finding address...</p>
                    </div>
                    <div id="reverseError" class="alert alert-danger d-none">
                        <i class="bi bi-exclamation-triangle-fill"></i> Error performing reverse geocoding
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="card shadow-sm">
                <div class="card-header bg-white py-3">
                    <h5 class="mb-0">Geocoding Preview</h5>
                </div>
                <div class="card-body p-0">
                    <div id="previewMap" style="height: 400px; width: 100%;"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Save Location Modal -->
<div class="modal fade" id="saveLocationModal" tabindex="-1" aria-labelledby="saveLocationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="saveLocationModalLabel">Save Location</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="saveLocationForm">
                    <input type="hidden" id="locationLatitude" name="latitude">
                    <input type="hidden" id="locationLongitude" name="longitude">
                    <input type="hidden" id="locationAddress" name="address">
                    
                    <div class="mb-3">
                        <label for="locationName" class="form-label">Location Name</label>
                        <input type="text" class="form-control" id="locationName" required>
                    </div>
                    <div class="mb-3">
                        <label for="locationType" class="form-label">Location Type</label>
                        <select class="form-select" id="locationType">
                            <option value="customer">Customer</option>
                            <option value="warehouse">Warehouse</option>
                            <option value="office">Office</option>
                            <option value="rest_area">Rest Area</option>
                            <option value="service_center">Service Center</option>
                            <option value="other">Other</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="locationNotes" class="form-label">Notes</label>
                        <textarea class="form-control" id="locationNotes" rows="3"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveLocationBtn">Save Location</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" />
    <style>
        #previewMap {
            z-index: 0;
        }
    </style>
}

@section Scripts {
    <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"></script>
    <script>
        $(document).ready(function () {
            // Initialize map
            const map = L.map('previewMap').setView([34.0522, -118.2437], 10);
            
            // Add OSM tile layer
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);
            
            // Layer for search results
            const markersLayer = L.layerGroup().addTo(map);
            
            // Forward geocoding
            $('#forwardGeocodingBtn').click(function() {
                const address = $('#forwardAddress').val().trim();
                
                if (!address) {
                    return;
                }
                
                // Show loading, hide previous results and errors
                $('#forwardLoading').removeClass('d-none');
                $('#forwardResults').addClass('d-none');
                $('#forwardError').addClass('d-none');
                $('#forwardResultsBody').empty();
                
                // Call API
                $.ajax({
                    url: '/Geocoding/Search',
                    type: 'GET',
                    data: {
                        query: address,
                        type: 'forward'
                    },
                    success: function(results) {
                        $('#forwardLoading').addClass('d-none');
                        
                        if (results.error) {
                            $('#forwardError').removeClass('d-none').text(results.error);
                            return;
                        }
                        
                        if (Array.isArray(results) && results.length > 0) {
                            // Clear previous markers
                            markersLayer.clearLayers();
                            
                            // Add results to table
                            results.forEach(function(result, index) {
                                const marker = L.marker([result.latitude, result.longitude])
                                    .bindPopup(`<strong>${result.formattedAddress}</strong><br>Lat: ${result.latitude.toFixed(6)}, Lng: ${result.longitude.toFixed(6)}`)
                                    .addTo(markersLayer);
                                
                                $('#forwardResultsBody').append(`
                                    <tr>
                                        <td>${result.formattedAddress}</td>
                                        <td>${result.latitude.toFixed(6)}, ${result.longitude.toFixed(6)}</td>
                                        <td>
                                            <button type="button" class="btn btn-sm btn-outline-primary zoom-to-result" data-lat="${result.latitude}" data-lng="${result.longitude}">
                                                <i class="bi bi-zoom-in"></i>
                                            </button>
                                            <button type="button" class="btn btn-sm btn-outline-success save-location" 
                                                data-lat="${result.latitude}" 
                                                data-lng="${result.longitude}" 
                                                data-address="${result.formattedAddress}">
                                                <i class="bi bi-bookmark-plus"></i>
                                            </button>
                                        </td>
                                    </tr>
                                `);
                            });
                            
                            // Show results
                            $('#forwardResults').removeClass('d-none');
                            
                            // Fit map to results
                            if (results.length > 0) {
                                const bounds = L.latLngBounds(results.map(r => [r.latitude, r.longitude]));
                                map.fitBounds(bounds);
                            }
                        } else {
                            $('#forwardError').removeClass('d-none').text('No results found for this address');
                        }
                    },
                    error: function(error) {
                        $('#forwardLoading').addClass('d-none');
                        $('#forwardError').removeClass('d-none').text('Error geocoding address');
                    }
                });
            });
            
            // Forward geocoding with enter key
            $('#forwardAddress').keypress(function(e) {
                if (e.which === 13) {
                    $('#forwardGeocodingBtn').click();
                    return false;
                }
            });
            
            // Reverse geocoding
            $('#reverseGeocodingBtn').click(function() {
                const lat = $('#reverseLatitude').val().trim();
                const lng = $('#reverseLongitude').val().trim();
                
                if (!lat || !lng) {
                    return;
                }
                
                // Show loading, hide previous results and errors
                $('#reverseLoading').removeClass('d-none');
                $('#reverseResults').addClass('d-none');
                $('#reverseError').addClass('d-none');
                $('#reverseResultsBody').empty();
                
                // Call API
                $.ajax({
                    url: '/Geocoding/Search',
                    type: 'GET',
                    data: {
                        query: `${lat},${lng}`,
                        type: 'reverse'
                    },
                    success: function(results) {
                        $('#reverseLoading').addClass('d-none');
                        
                        if (results.error) {
                            $('#reverseError').removeClass('d-none').text(results.error);
                            return;
                        }
                        
                        if (Array.isArray(results) && results.length > 0) {
                            // Clear previous markers
                            markersLayer.clearLayers();
                            
                            // Add marker to map
                            const marker = L.marker([lat, lng])
                                .bindPopup(`<strong>Selected Location</strong><br>Lat: ${parseFloat(lat).toFixed(6)}, Lng: ${parseFloat(lng).toFixed(6)}`)
                                .addTo(markersLayer);
                            
                            // Add results to table
                            results.forEach(function(result) {
                                $('#reverseResultsBody').append(`
                                    <tr>
                                        <td>${result.formattedAddress}</td>
                                        <td>${result.type || 'Unknown'}</td>
                                        <td>
                                            <button type="button" class="btn btn-sm btn-outline-success save-location" 
                                                data-lat="${lat}" 
                                                data-lng="${lng}" 
                                                data-address="${result.formattedAddress}">
                                                <i class="bi bi-bookmark-plus"></i>
                                            </button>
                                        </td>
                                    </tr>
                                `);
                            });
                            
                            // Show results
                            $('#reverseResults').removeClass('d-none');
                            
                            // Center map on coordinates
                            map.setView([lat, lng], 15);
                        } else {
                            $('#reverseError').removeClass('d-none').text('No results found for these coordinates');
                        }
                    },
                    error: function(error) {
                        $('#reverseLoading').addClass('d-none');
                        $('#reverseError').removeClass('d-none').text('Error geocoding coordinates');
                    }
                });
            });
            
            // Zoom to result
            $(document).on('click', '.zoom-to-result', function() {
                const lat = $(this).data('lat');
                const lng = $(this).data('lng');
                
                map.setView([lat, lng], 15);
                
                // Find marker and open popup
                markersLayer.eachLayer(function(layer) {
                    if (layer instanceof L.Marker) {
                        const markerLatLng = layer.getLatLng();
                        if (markerLatLng.lat === lat && markerLatLng.lng === lng) {
                            layer.openPopup();
                        }
                    }
                });
            });
            
            // Save location modal
            $(document).on('click', '.save-location', function() {
                const lat = $(this).data('lat');
                const lng = $(this).data('lng');
                const address = $(this).data('address');
                
                // Set values in modal
                $('#locationLatitude').val(lat);
                $('#locationLongitude').val(lng);
                $('#locationAddress').val(address);
                
                // Show modal
                $('#saveLocationModal').modal('show');
            });
            
            // Save location
            $('#saveLocationBtn').click(function() {
                const lat = $('#locationLatitude').val();
                const lng = $('#locationLongitude').val();
                const address = $('#locationAddress').val();
                const name = $('#locationName').val();
                const type = $('#locationType').val();
                const notes = $('#locationNotes').val();
                
                if (!name) {
                    alert('Please enter a name for this location');
                    return;
                }
                
                // Create saved location object
                const savedLocation = {
                    name: name,
                    latitude: parseFloat(lat),
                    longitude: parseFloat(lng),
                    address: address,
                    type: type,
                    notes: notes,
                    isActive: true
                };
                
                // Call API to save location
                $.ajax({
                    url: '/Geocoding/CreateLocation',
                    type: 'POST',
                    data: savedLocation,
                    success: function(response) {
                        // Close modal
                        $('#saveLocationModal').modal('hide');
                        
                        // Show success message
                        toastr.success('Location saved successfully');
                        
                        // Reset form
                        $('#saveLocationForm')[0].reset();
                    },
                    error: function(error) {
                        toastr.error('Error saving location');
                    }
                });
            });
            
            // Suggest addresses as user types
            $('#forwardAddress').on('input', function() {
                const query = $(this).val().trim();
                
                if (query.length >= 3) {
                    $.ajax({
                        url: '/Geocoding/Suggest',
                        type: 'GET',
                        data: { query: query },
                        success: function(suggestions) {
                            if (Array.isArray(suggestions) && suggestions.length > 0) {
                                // Enable autocomplete with suggestions
                                // This would be implemented with a proper autocomplete library
                                console.log('Suggestions:', suggestions);
                            }
                        }
                    });
                }
            });
        });
    </script>
} 